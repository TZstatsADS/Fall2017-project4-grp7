"""
This is used to generate the prediction matrix

"""

import numpy as np
import pandas as pd



def mixture_model_prediction(A,THETA):
    """
    return the prediction matrix
    A and THETA generated by cluster_model.py should also be pandas matrix 
    """
    m=A.shape[0] # number of users
    n=THETA[0].shape[0] # number of items
    #print n
    prob_0=[]
    
    for k in range(len(THETA)): # theta is a matrix for every cluster
        prob_0.append(A[:,k].reshape(m,1).dot(THETA[k][:,0].reshape(1,n)))
    probability_matrix_0=np.sum(prob_0,0)
    #print probability_matrix_0
    
    prediction_matrix=np.zeros([m,n])
    prediction_matrix[probability_matrix_0<0.5]=1
    #print prediction_matrix
    return [prediction_matrix,probability_matrix_0]    


def main():
    mixture_model=np.load("../output/cluster_3_model.npz")
    train_pd=pd.read_csv("../output/train_matrix.csv",index_col=0)
    
    THETA=mixture_model['THETA']
    A=mixture_model['A'] #assign matrix
    prediction_matrix,probability_matrix_0=mixture_model_prediction(A,THETA)
    
    # transform numpy matrix to pandas matrix
    prediction_matrix=pd.DataFrame(prediction_matrix)
    prediction_matrix.index=train_pd.index
    
    
    prediction_matrix.columns=train_pd.columns
    
    probability_matrix_0=pd.DataFrame(probability_matrix_0)
    probability_matrix_0.index=train_pd.index
    probability_matrix_0.columns=train_pd.columns
    
   
    prediction_matrix.to_csv("../output/prediction_matrix.csv",header=True,index=True)
    probability_matrix_0.to_csv("../output/probability_matrix_0.csv",header=True,index=True)
if __name__=="__main__":        
    main()